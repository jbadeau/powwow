<?xml version="1.0" encoding="UTF-8"?>
<!--

        Copyright 2006-2008 OpenAjax Alliance

        Licensed under the Apache License, Version 2.0 (the "License"); 
        you may not use this file except in compliance with the License. 
        You may obtain a copy of the License at
        
                http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software 
        distributed under the License is distributed on an "AS IS" BASIS, 
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
        See the License for the specific language governing permissions and 
        limitations under the License.
-->
<widget name="WidgetAPITester" id="http://openajax.org/samples/widgets/WidgetAPITester"
		spec="1.0" width="500" height="250" sandbox="true"
		xmlns="http://openajax.org/metadata">
    <description>This is a test widget that tests the Widget JavaScript API as defined in the OAA spec.</description>

    <requires>
		<library name="dojo" version="1.3" src="http://ajax.googleapis.com/ajax/libs/dojo/1.3/">
	    	<require type="javascript" src="dojo/dojo.xd.js"/>
	    	<require type="css" src="dojo/resources/dojo.css"/>
		</library>
    </requires>

    <properties>
        <property name="dummy1" datatype="String" defaultValue="Hello there!"/>
        <property name="dummyNumber" datatype="Number" defaultValue="5"/>
    </properties>

    <content>
    <![CDATA[
        <textarea id="__WID__messages" readonly="readonly" style="width:500px;height:200px;"></textarea>
        <br>
        <button onclick="OpenAjax.widget.byId('__WID__').testAdjust()">Adjust Dimensions (+10)</button>
        <button onclick="OpenAjax.widget.byId('__WID__').testSetPropValue()">Increment 'dummyNumber' Property</button>
    ]]>
    </content>
    
    <content mode="help">
    <![CDATA[
    	<p>Help content goes here.</p>
    	<br>
    	<button onclick="OpenAjax.widget.byId('__WID__').showMainPage()">Main</button>
    ]]>
    </content>

    <content mode="customView1">
    <![CDATA[
    	<h3> Custom View 1 </h3>
    	<br>
    	<button onclick="OpenAjax.widget.byId('__WID__').showMainPage()">Main</button>
    ]]>
    </content>

    <content mode="foo:customView2">
    <![CDATA[
    	<h3> Custom View 2 </h3>
    	<br>
    	<button onclick="OpenAjax.widget.byId('__WID__').showMainPage()">Main</button>
    ]]>
    </content>
    
    <javascript>
    <![CDATA[
        var widget = OpenAjax.widget.byId("__WID__");
        
        // log widget events
        widget.onLoad = function() {
            this.log( 'event => load' );
        };
        widget.onUnload = function() {
            this.log( 'event => unload' );
            alert( "WidgetAPITester: Mashup unloading" );
        };
//        this.registerCallback( 'remove', function() {
//            this.log( 'event => remove' );
//            alert( "WidgetAPITester: widget to be removed" );
//        });
//        this.registerCallback( 'insert', function() {
//            this.log( 'event => insert' );
//        });
        widget.modeChanged = function( event ) {
            this.log( "event => modeChanged" + "(oldMode=" + event.oldMode +
                    ", newMode=" + event.newMode + ")" );
        };
        widget.sizeChanged = function( event ) {
            this.log( 'event => sizeChanged' );
            this.printCurrentDimensions();
        };
        
        ////////////////////////////////////////////////////////////////////////
        
        widget.log = function( msg ) {
            function format( number, spaces ) {
                var str = String( number );
                for ( var i = str.length; i < spaces; i++ ) {
                    str = "0" + str;
                }
                return str;
            };
            
            var now = new Date();
            var time = format( now.getHours(), 2 ) + ":" + 
                    format( now.getMinutes(), 2 ) + ":" +
                    format( now.getSeconds(), 2 ) + "." + 
                    format( now.getMilliseconds(), 3 );
            var message = time + " : " + msg + "\n";
            
            var textarea = document.getElementById( "__WID__messages" );
            textarea.value += message;
            textarea.scrollTop = textarea.scrollHeight;            
            console.log( msg );
        };
        
        widget.testAdjust = function() {
            var dim = this.OpenAjax.getDimensions();
            var width = dim.width + 10;
            var height = dim.height + 10;
            this.OpenAjax.adjustDimensions({ width: width, height: height });
            this.log( "Adjusted dimensions to (w=" + width + ", h=" + height + ")" );
        };
        
        widget.testSetPropValue = function() {
            // XXX 'number' property comes back as string, forcing us to cast
            var oldValue = Number( this.OpenAjax.getPropertyValue( "dummyNumber" ) );
            var newValue = oldValue + 1;
            this.OpenAjax.setPropertyValue( "dummyNumber", newValue );
            this.log( "Incremented 'dummyNumber' property" );
            this.printPropValues([ 'dummyNumber' ]);
        };
        
		widget.showMainPage = function() {
			var views = this.getSupportedViews();
			this.requestNavigateTo( views['default'] ); 
		};
        
        widget.printPropValues = function( names ) {
            var msg = "";
            for ( var i = 0; i < names.length; i++ ) {
                if ( i == 0 ) {
                    msg += "property values =";
                }
                var value = this.OpenAjax.getPropertyValue( names[i] );
                msg += "\n\t\t\t" + names[i] + " => " + value;
            }
            this.log( msg );
        };
        
        widget.printCurrentDimensions = function() {
            var dims = this.OpenAjax.getDimensions();
            this.log( 'current dimensions = ' +
                    (dims ? 'w=' + dims.width + '  h=' + dims.height : 'unknown') );
        };
		
        ////////////////////////////////////////////////////////////////////////
        
        var dim = widget.OpenAjax.getAvailableDimensions();
        widget.log( 'available dimensions = ' + 
                'w=' + (dim.width ? dim.width : 'unconstrained') + 
                '  h=' + (dim.height ? dim.height : 'unconstrained') );
        widget.printCurrentDimensions();
        
        var names = widget.OpenAjax.getPropertyNames();
        widget.log( "property names = " + names );
        widget.printPropValues( names );
        
//        var views = this.getSupportedViews();
//        var txt = "[ ";
//        var first = true;
//        for ( var v in views ) {
//        	if ( ! first ) {
//	        	txt += ", ";
//	        } else {
//	        	first = false;
//	        }
//        	txt += v;
//        }
//        txt += " ]";
//        this.log( "views = " + txt );
    ]]>
    </javascript>
</widget>
